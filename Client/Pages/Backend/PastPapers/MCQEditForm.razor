@*@using Admin.Shared.Models
    @using Microsoft.AspNetCore.Authorization
    @using Microsoft.AspNetCore.Components.WebAssembly.Authentication


    <div class="alert alert-secondary mt-4" role="alert">

        <EditForm OnValidSubmit="HandleValidSubmit" Model="MCQEditModel">
            <h3>What is happening @Title </h3>
            <hr />

            <ValidationSummary />
            <div class="form-group row">
                <label for="id" class="col-sm-2 col-form-label">
                    MCQ ID:
                </label>
                <div class="col-sm-10">
                    <InputNumber id="id" class="form-control" placeholder="Auto Generated ID" disabled="true"
                                 @bind-Value="MCQEditModel.Id" />
                    <ValidationMessage For="@(() => MCQEditModel.Id)" />
                </div>
            </div>
            <div class="form-group row">
                <label for="title" class="col-sm-2 col-form-label">
                    Question
                </label>
                <div class="col-sm-10">
                    <InputText id="title" class="form-control" placeholder="Title"
                               @bind-Value="MCQEditModel.Instruction" />
                    <ValidationMessage For="@(() => MCQEditModel.Instruction)" />
                </div>
            </div>
            <div class="form-group row">
                <label for="title" class="col-sm-2 col-form-label">
                    Question
                </label>
                <div class="col-sm-10">
                    <InputText id="title" class="form-control" placeholder="Title"
                               @bind-Value="MCQEditModel.Question" />
                    <ValidationMessage For="@(() => MCQEditModel.Question)" />
                </div>
            </div>
            <div class="form-group row">
                <label for="description" class="col-sm-2 col-form-label">
                    QuestionImageUrl
                </label>
                <div class="col-sm-10">
                    <InputText id="description" class="form-control" placeholder="Paper year"
                               @bind-Value="MCQEditModel.QuestionImageUrl" />
                    <ValidationMessage For="@(() => MCQEditModel.QuestionImageUrl)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="imageurl" class="col-sm-2 col-form-label">
                    Answer
                </label>
                <div class="col-sm-10">
                    <InputNumber id="imageurl" class="form-control" placeholder="Paper number"
                                 @bind-Value="MCQEditModel.Answer" />
                    <ValidationMessage For="@(() => MCQEditModel.Answer)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="imageurl" class="col-sm-2 col-form-label">
                    Paper URL
                </label>
                <div class="col-sm-10">
                    <InputText id="imageurl" class="form-control" placeholder="Image url"
                               @bind-Value="MCQEditModel.JustificationText" />
                    <ValidationMessage For="@(() => MCQEditModel.JustificationText)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="marquee" class="col-sm-2 col-form-label">
                    Thumbnail
                </label>
                <div class="col-sm-10">
                    <InputText id="marquee" class="form-control" placeholder="Maruquee Image Url"
                               @bind-Value="MCQEditModel.JustificationImageUrl" />
                    <ValidationMessage For="@(() => MCQEditModel.JustificationImageUrl)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="price" class="col-sm-2 col-form-label">
                    Is Approved?
                </label>
                <div class="col-sm-10">
                    <InputCheckbox id="price" class="form-control" placeholder="Is the subject Approved?"
                                   @bind-Value="MCQEditModel.IsAnonymous" />
                    <ValidationMessage For="@(() => MCQEditModel.IsAnonymous)" />
                </div>
            </div>
            <div class="form-group row">
                <label for="title" class="col-sm-2 col-form-label">
                    Topic ID
                </label>
                <div class="col-sm-10">
                    <InputNumber id="title" class="form-control" placeholder="Title"
                                 @bind-Value="MCQEditModel.TopicId" />
                    <ValidationMessage For="@(() => MCQEditModel.TopicId)" />
                </div>
            </div>
            <div class="form-group row">
                <label for="title" class="col-sm-2 col-form-label">
                    Position:
                </label>
                <div class="col-sm-10">
                    <InputNumber id="title" class="form-control" placeholder="Title"
                                 @bind-Value="MCQEditModel.Position" />
                    <ValidationMessage For="@(() => MCQEditModel.Position)" />
                </div>
            </div>

            <div style="display: flex; align-items: center">
                <button class="btn btn-primary" type="submit" style="margin: auto">Submit</button>
            </div>
        </EditForm>

    </div>


          @if(etq.Questions.Any())
                        {
                <div>
                    @foreach (var q in etq.Questions)
                    {
                        @if (!string.IsNullOrEmpty(q.ImageUrlBeforeText))
                        {
                            <div>
                                <img src="@q.ImageUrlBeforeText" height="200" />
                                <p>@((MarkupString)@q.ImageUrlBeforeText)</p>
                            </div>
                        }
                        <p> @((MarkupString)q.Text) </p>

                        @if (!string.IsNullOrEmpty(q.ImageUrlAfterText))
                        {
                            <div>
                                <img src="@q.ImageUrlAfterText}" height="200" />
                                <p>@((MarkupString)@q.ImageUrlAfterText)</p>
                            </div>
                        }

                        @if (!string.IsNullOrEmpty(q.VideoUrl))
                        {
                            <div>
                                <video width="320" height="240" controls>
                                    <source src="@q.VideoUrl" type="video/mp4">
                                </video>
                                <p>@((MarkupString)@q.VideoUrl)</p>
                            </div>
                        }

                        @if (q.SubQuestions.Any())
                        {
                            @foreach (var subq in q.SubQuestions)
                            {
                            <div style="padding-left:20px">
                                @if (!string.IsNullOrEmpty(subq.ImageUrlBeforeText))
                                {
                                    <div>
                                        <img src="@subq.ImageUrlBeforeText" height="200" />
                                        <p>@((MarkupString)@subq.ImageUrlBeforeText)</p>
                                    </div>
                                }
                                <p> @((MarkupString)subq.Text) </p>

                                @if (!string.IsNullOrEmpty(subq.ImageUrlAfterText))
                                {
                                    <div>
                                        <img src="@subq.ImageUrlAfterText}" height="200" />
                                        <p>@((MarkupString)@subq.ImageUrlAfterText)</p>
                                    </div>
                                }

                                @if (!string.IsNullOrEmpty(subq.VideoUrl))
                                {
                                    <div>
                                        <video width="320" height="240" controls>
                                            <source src="@subq.VideoUrl" type="video/mp4">
                                        </video>
                                        <p>@((MarkupString)@subq.VideoUrl)</p>
                                    </div>
                                }
                                <p>
                                    <b>Id:</b> @((MarkupString)@subq.Id.ToString()),
                                    <b>Marks:</b> @((MarkupString)@subq.Marks.ToString()),
                                    <b>Position:</b> @((MarkupString)@subq.Position.ToString())
                                </p>
                                @if (subq.Solution.Any())
                                {
                                    @foreach (var p in subq.Solution)
                                    {
                                        <div style="background-color:lightgray; padding: 12px; border: 1px solid gray">
                                            <p>
                                                @if (!string.IsNullOrEmpty(p.ImageUrl))
                                                {
                                                    <div>
                                                        <img src="@p.ImageUrl}" height="200" />
                                                        <p>@((MarkupString)@p.ImageUrl)</p>
                                                    </div>
                                                }
                                                <div>
                                                    <p>@((MarkupString)@p.Content)</p>
                                                </div>

                                            </p>
                                        </div>
                                    }
                                }
                            </div>
                            }

                        }


                        <p>
                            <b>Id:</b> @((MarkupString)@q.Id.ToString()),
                            <b>HasUniqueSolution:</b> @((MarkupString)@q.HasUniqueSolution.ToString()),
                            <b>TotalMarks:</b> @((MarkupString)@q.Marks.ToString()),
                            <b>Position:</b> @((MarkupString)@q.Position.ToString())
                        </p>

                        //Displaying Solution

                        @if (q.SolutionQ.Any())
                        {
                            @foreach (var s in q.SolutionQ)
                            {
                                <div style="background-color:lightgray; padding: 12px; border: 1px solid gray">
                                    <p>
                                        @if (!string.IsNullOrEmpty(s.ImageUrl))
                                        {
                                            <div>
                                                <img src="@s.ImageUrl}" height="200" />
                                                <p>@((MarkupString)@s.ImageUrl)</p>
                                            </div>
                                        }
                                        <div>
                                            <p>@((MarkupString)@s.Content)</p>
                                        </div>

                                    </p>
                                </div>
                            }
                        }
                    }
                </div>
                        }

    @code {
        [Parameter] public MCQ MCQEditModel { get; set; }
        [Parameter]
        public EventCallback<MCQ> OnMCQEditSubmit { get; set; }
        [Parameter] public string Title { get; set; }


        public async Task HandleValidSubmit()
        {



            await OnMCQEditSubmit.InvokeAsync(MCQEditModel);
        }
    }*@
