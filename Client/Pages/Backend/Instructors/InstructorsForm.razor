@using Admin.Shared.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.Extensions.Logging


@using System.IO

 
@using Newtonsoft.Json 

@inject HttpClient Http
@inject IJSRuntime JSRuntime

@inject ILogger<Instructor> Logger

<div class="alert alert-secondary mt-4" role="alert">    
    <EditForm OnValidSubmit="HandleValidSubmit" Model="InstructorModel">
        <h3> @Title</h3>
        <hr />
        <ValidationSummary />

        <div class="form-group row">
            <label for="id" class="col-sm-2 col-form-label">
                Instructor ID:
            </label>
            <div class="col-sm-10">
                <InputText id="id" class="form-control" placeholder="Instructor Email Address"
                           @bind-Value="InstructorModel.Id" />
                <ValidationMessage For="@(() => InstructorModel.Id)" />
            </div>
        </div>

        <div class="form-group row">
            <label for="name" class="col-sm-2 col-form-label">
                Name:
            </label>
            <div class="col-sm-10">
                <InputText id="name" class="form-control" placeholder="Name of instructor"
                           @bind-Value="InstructorModel.Name" />
                <ValidationMessage For="@(() => InstructorModel.Name)" />
            </div>
        </div>

        <div class="form-group row">
            <label for="description" class="col-sm-2 col-form-label">
                Description:
            </label>
            <div class="col-sm-10">
                <InputText id="name" class="form-control" placeholder="Biography of instructor"
                           @bind-Value="InstructorModel.Description" />
                <ValidationMessage For="@(() => InstructorModel.Description)" />
            </div>
        </div>

        <div class="form-group row">
            <label for="imageurl" class="col-sm-2 col-form-label">
                Image Url:
            </label>
            <div class="col-sm-10">
                <InputText id="imageurl" class="form-control" placeholder="image url"
                           @bind-Value="InstructorModel.ImageUrl" />
                <ValidationMessage For="@(() => InstructorModel.ImageUrl)" />
            </div>
        </div>

        <div class="form-group row">
            <label for="imageurl" class="col-sm-2 col-form-label">
                Discount Code:
            </label>
            <div class="col-sm-10">
                <InputText id="discount" class="form-control" placeholder="discount code"
                             @bind-Value="InstructorModel.DiscountCode" />
                <ValidationMessage For="@(() => InstructorModel.DiscountCode)" />
            </div>
        </div>

        <div style="display: flex; align-items: center">
            <button class="btn btn-primary" type="submit" style="margin: auto">Submit</button>
        </div>

    </EditForm>
    

</div>


@code {

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public bool isToBeEdited { get; set; }

    [Parameter] public Instructor InstructorModel { get; set; }


    public bool isLoading { get; set; }


    [Parameter]
    public EventCallback<Instructor> OnInstructorFormEditSubmit { get; set; }


    public async Task HandleValidSubmit()
    {

        await OnInstructorFormEditSubmit.InvokeAsync(InstructorModel);
    }


}

