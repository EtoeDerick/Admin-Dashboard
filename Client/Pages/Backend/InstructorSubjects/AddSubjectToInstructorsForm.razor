@using Admin.Shared.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.Extensions.Logging


@using System.IO

 
@using Newtonsoft.Json 

@inject HttpClient Http
@inject IJSRuntime JSRuntime

@inject ILogger<AddSubjectToInstructorsForm> Logger

<div class="alert alert-secondary mt-4" role="alert">    
    <EditForm OnValidSubmit="HandleValidSubmit" Model="InstructorSubjectModel">
        <h3> @Title</h3>
        <hr />
        <ValidationSummary />

        <div class="form-group row">
            <label for="id" class="col-sm-2 col-form-label">
                Instructor ID:
            </label>
            <div class="col-sm-10">
                <InputText id="id" class="form-control" disabled
                           @bind-Value="InstructorSubjectModel.InstructorId" />
                <ValidationMessage For="@(() => InstructorSubjectModel.InstructorId)" />
            </div>
        </div>

        <div class="form-group row">
            <label for="date" class="col-sm-2 col-form-label">
                Date:
            </label>
            <div class="col-sm-10">
                <InputDate id="date" class="form-control" placeholder="date"
                           @bind-Value="InstructorSubjectModel.Date" />
                <ValidationMessage For="@(() => InstructorSubjectModel.Date)" />
            </div>
        </div>

        <div class="form-group row">
            <label for="description" class="col-sm-2 col-form-label">
                Is Active?:
            </label>
            <div class="col-sm-10">
                <InputCheckbox id="isactive" class="form-control" placeholder="is an active instructor?"
                               @bind-Value="InstructorSubjectModel.IsActive" />
                <ValidationMessage For="@(() => InstructorSubjectModel.IsActive)" />
            </div>
        </div>
        <div class="form-group row">
            <label for="imageurl" class="col-sm-2 col-form-label">
                Commission
            </label>
            <div class="col-sm-10">
                <InputNumber id="commission" class="form-control"
                             @bind-Value="InstructorSubjectModel.Commission" />
                <ValidationMessage For="@(() => InstructorSubjectModel.Commission)" />
            </div>
        </div>

        <div class="form-group row">
            <label for="imageurl" class="col-sm-2 col-form-label">
                SubjectId
            </label>
            <div class="col-sm-10">
                <InputNumber id="subjectId" class="form-control"
                             @bind-Value="InstructorSubjectModel.SubjectId" />
                <ValidationMessage For="@(() => InstructorSubjectModel.SubjectId)" />
            </div>
        </div>

        <div style="display: flex; align-items: center">
            <button class="btn btn-primary" type="submit" style="margin: auto">Submit</button>
        </div>

    </EditForm>
    

</div>


@code {

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public bool isToBeEdited { get; set; }

    [Parameter] public InstructorSubject InstructorSubjectModel { get; set; }


    public bool isLoading { get; set; }


    [Parameter]
    public EventCallback<InstructorSubject> OnInstructorFormEditSubmit { get; set; }


    public async Task HandleValidSubmit()
    {

        await OnInstructorFormEditSubmit.InvokeAsync(InstructorSubjectModel);
    }


}

