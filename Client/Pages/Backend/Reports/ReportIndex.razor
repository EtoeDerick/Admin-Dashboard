@page "/report"

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Admin.Shared.Models


@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<a href="/report/create" class="btn btn-primary">Create New Report</a>


@if (mCQReports == null)
{
    <div class="spinner-grow text-primary"></div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <td></td>
                <th>ReportID</th>
                <th>MCQ ID</th>
                <th>MCQ Position</th>
                <th>Resolved</th>
                <th>Resolved Date</th>
                <th>Date Reported</th>
                <th>PastPaper ID</th>
                <th>Subject</th>
                <th></th>
            </tr>
        </thead>

        <tbody>
            @foreach (var report in mCQReports)
            {
            <tr>
                <td>
                    <a class="btn btn-info" href="/report/edit/@report.Id">Edit</a>
                </td>
                <td>@report.Id</td>
                <td>@report.McqId</td>
                <td>@report.QuestionPosition</td>
                <td>
                    @if (report.IsResolved)
                    {
                        <input type="checkbox" checked="@report.IsResolved" disabled style="background-color: green; color:red" />
                    }
                    else
                    {
                        <label style="color: white; background-color:red; padding:6px; border-radius: 4px">Not Resolved</label>
                    } 
                </td>
                <td>
                @if (report.IsResolved)
                {
                    <label style="color: white; background-color: green; padding: 6px; border-radius: 4px">@report.ResolveDate</label>
                    }
                    else
                    {
                        <label style="color: white; background-color: red; padding: 6px; border-radius: 4px">Not Resolved</label>
                    }

                </td>
                <td>@report.ReportDate</td>
                <td>@report.PastPaperId</td>
                <td>@report.SubjectId</td>
                <td>
                    <button class="btn btn-danger" @onclick="@(async () => await DeleteReport(report))">Delete</button>
                </td>
            </tr>
            }
        </tbody>
    </table>
    @if (mCQReports.Length == 0)
    {
        <div>No Data Found!</div>
    }
}


@code {
    private MCQReport[] mCQReports;

    protected override async Task OnInitializedAsync()
    {

        try
        {
            mCQReports = await Http.GetFromJsonAsync<MCQReport[]>("api/McqReports");

        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

    private async Task DeleteReport(MCQReport report)
    {
        //Ask for user confirmation then delete according
        if (!await JSRuntime.InvokeAsync<bool>("confirm", $"Are you sure you want to delete with ID: '{report.Id}'?"))
            return;

        //Delete and Navigate to List of Exams
        try
        {
            await Http.DeleteAsync($"api/McqReports/{report.Id}");

            mCQReports = await Http.GetFromJsonAsync<MCQReport[]>("api/McqReports");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }

    }
}
